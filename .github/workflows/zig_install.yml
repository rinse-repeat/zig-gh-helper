name: "Zig Installer"

on:
# debug:
#  workflow_dispatch:
  workflow_call:
    inputs:
#      json-matrix:
#        description: 'JSON Matrix'
#        required: true
#        type: string
      target:
        description: 'Target Triplet'
        required: true
        type: string
      os:
        description: 'Runner OS'
        required: true
        type: string
#        type: choice
#          - macos-latest
#          - windows-latest
#          - ubuntu-latest
      use-cache:
        description: 'Zig Cache'
        required: true
        default: true
        type: boolean
      ext-cache:
        description: 'Cache Extension'
        required: false
        default: 'AAA'
        type: string
      zig-version:
        description: 'Zig Version'
        required: true
        type: string
        default: 0.9.1

jobs:
  zig-test:
    name: ZIG Install on ${{ inputs.target }} OS ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
    steps:
      - name: Pull zig-helper
        uses: actions/checkout@v3
        with:
          repository: rinse-repeat/zig-gh-helper
          path: zig-helper
      - name: Set Vars & Matrix
        id: set_var
        run: |
          echo "ZIG_VERSION=${{ inputs.zig-version }}" | tee -a $GITHUB_ENV
          content=`cat ./zig-helper/matrix.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=matrixJson::$content"
      - name: Show matrixJson
        run: |
          echo "${{ steps.set_var.outputs.matrixJson }}"
      - name: Environment ZIG (Non-Windows)
        if: ${{ contains(inputs.os, 'windows') == false }}
        run: |
          source ./zig-helper/zig_map.sh
          zig_triplets_env $GITHUB_ENV ${{ inputs.target }}
          cat $GITHUV_ENV
      - name: Load ZIG checksum
        run: |
          export ZIG_CHECKSUM=`cat ./zig-helper/zig-checksums-0.9.1.json | jq --raw-output ".[\"${{ env.ZIG_OS }}_${{ env.ZIG_ARCH }}\"]"`
          echo "ZIG_CHECKSUM=$ZIG_CHECKSUM" | tee -a $GITHUB_ENV
      - name: NIX Cache ZIG
        if: ${{ inputs.use-cache == true && contains(inputs.os, 'windows') == false }}
        uses: actions/cache@v3
        with:
          key: zig-${{ env.ZIG_OS }}-${{ env.ZIG_ARCH}}-${{ env.ZIG_VERSION}}-${{ inputs.ext-cache }}
          path: ~/zig
      - name: Setup ZIG (Non-Windows)
        if: ${{ contains(inputs.os, 'windows') == false }}
        run: |
          source ./zig-helper/zig_map.sh
          zig_triplets_env $GITHUB_ENV ${{ inputs.target }}
#          cat $GITHUV_ENV
          zig_install_nix ${{ inputs.os }}
      - name: Setup ZIG (Windows)
        if: ${{ contains(inputs.os, 'windows') == true }}
        run: echo Not implemented! XD
#      - name: LS
#        run: ls -laR ./